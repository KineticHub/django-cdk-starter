#!/bin/bash

set -o errexit
set -o pipefail
set -o nounset

# N.B. If only .env files supported variable expansion...
export CELERY_BROKER_URL="${REDIS_ENDPOINT}"

if [ -z "${POSTGRES_USER}" ]; then
    base_postgres_image_default_user='postgres'
    export POSTGRES_USER="${base_postgres_image_default_user}"
fi

python << END
import sys
import time
import os

import psycopg2

suggest_unrecoverable_after = 30
start = time.time()

postgresVars = ${JUSTFORFAMDB_SECRET}

POSTGRES_USER = str(postgresVars['username'])
POSTGRES_PASSWORD = str(postgresVars['password'])
POSTGRES_HOST = str(postgresVars['host'])
POSTGRES_PORT = str(postgresVars['port'])
POSTGRES_DB = str(postgresVars['dbname'])
POSTGRES_ENGINE = str(postgresVars['engine'])

DATABASE_URL="{}://{}:{}@{}:{}/{}".format(POSTGRES_ENGINE, POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_HOST, POSTGRES_PORT, POSTGRES_DB)

while True:
    try:
        psycopg2.connect(
            dbname=POSTGRES_DB,
            user=POSTGRES_USER,
            password=POSTGRES_PASSWORD,
            host=POSTGRES_HOST,
            port=POSTGRES_PORT,
        )
        break
    except psycopg2.OperationalError as error:
        sys.stderr.write("Waiting for PostgreSQL to become available...\n")

        if time.time() - start > suggest_unrecoverable_after:
            sys.stderr.write("  This is taking longer than expected. The following exception may be indicative of an unrecoverable error: '{}'\n".format(error))

    time.sleep(1)
END

>&2 echo 'PostgreSQL is available'

exec "$@"
